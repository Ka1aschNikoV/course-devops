stages:
  - lint
  - build
  - test
  - deploy

variables:
  COMPOSE_PROJECT_NAME: "course-devops"  # Isolates the test environment
  COMPOSE_FILE: "docker-compose.yml" # Use a separate compose file for testing
  SSH_KNOWN_HOSTS: "86.50.231.95"
  
eslint-job:
  stage: lint
  image: node:latest
  before_script:
    - npm install
  script:
    - npm run lint
  only:
    - project


build-job:
  stage: build
  image: docker:latest # Docker-in-Docker support
  services:
    - name: docker:24.0.2-dind # Docker daemon in the CI runner
      alias: dockerdind
  variables:
    DOCKER_HOST: tcp://dockerdind:2375/

    DOCKER_TLS_CERTDIR: ""

    DOCKER_DRIVER: overlay2

  before_script:
    - apk add docker-compose docker
    - docker login compse140.devops-gitlab.rd.tuni.fi:5050
    
  script:
    - docker build -t compse140.devops-gitlab.rd.tuni.fi:5050/dpniva/devops-project .
    - docker push compse140.devops-gitlab.rd.tuni.fi:5050/dpniva/devops-project
    

  only:
    - project 


test-job:
  stage: test
  image: docker:latest # Docker-in-Docker support
  services:
    - name: docker:24.0.2-dind # Docker daemon in the CI runner
      alias: dockerdind
  variables:
    DOCKER_HOST: tcp://dockerdind:2375/

    DOCKER_TLS_CERTDIR: ""

    DOCKER_DRIVER: overlay2

  before_script:
    - apk add docker-compose docker npm nodejs
    - npm install

  script:
    - docker-compose up -d #Start the cluster
    - sleep 10
    - docker exec test_container npm test
    - docker-compose down # Stop
  only:
    - project 

deploy-server:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  script:
    - ssh ubuntu@86.50.231.95 "mkdir -p ~/devopper"
    - docker pull compse140.devops-gitlab.rd.tuni.fi:5050/dpniva/devops-project
    - ssh ubuntu@86.50.231.95 "docker-compose up -d"
  only:
    - project
