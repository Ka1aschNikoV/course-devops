stages:
  - lint
  - build
  - test
  - deploy

jlint-job:
  stage: lint
  image: openjdk:17  # Use a Java image that matches your project
  script:
    - echo "Downloading JLint..."
    - wget https://jlint.com/jlint.jar -O jlint.jar
    - echo "Running JLint..."
    - java -jar jlint.jar ./service2/service2/src  # Replace 'src' with your Java source folder
  allow_failure: true  # Fail the pipeline if JLint finds issues

build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"

docker-build:
  stage: build
  script:
    - echo "Building and starting services with Docker Compose"
    - docker ps -a
    - docker rm -f backend3-1
    - docker rm -f backend2-1
    - docker rm -f backend1-1
    - docker rm -f service2
    - docker rm -f nginx_frontend
    - docker rm -f api_gateway
    - docker-compose up --build -d  # Use -d to run detached

test-job:
  stage: test
  script:
    - echo "Running tests with services up"
    - npm install
    - npm test
    
deploy-prod:
  stage: deploy
  script:
    - echo "Deploying to production"
    - docker-compose down  # Optional: Clean up services after deployment
  environment: production
